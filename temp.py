import tkinter as tk
from tkinter import ttk, messagebox

# –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class RecipeBookApp(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("–ö–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤")
        self.geometry("600x400")

        # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤
        self.recipes = []

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_widgets()

    def create_widgets(self):
        """–°–æ–∑–¥–∞—ë–º –≤–∏–¥–∂–µ—Ç—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        title_label = tk.Label(self, text="üìñ –ö–Ω–∏–≥–∞ –†–µ—Ü–µ–ø—Ç–æ–≤", font=("Arial", 16, "bold"))
        title_label.pack(pady=10)

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
        button_frame = tk.Frame(self)
        button_frame.pack(pady=10)

        add_button = ttk.Button(button_frame, text="–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", command=self.open_add_recipe_window)
        add_button.grid(row=0, column=0, padx=10)

        view_button = ttk.Button(button_frame, text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã", command=self.view_recipes)
        view_button.grid(row=0, column=1, padx=10)

        # –ü–æ–ª–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        self.recipe_listbox = tk.Listbox(self, width=80, height=15)
        self.recipe_listbox.pack(pady=10)

        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        self.categories = ['–í—Å–µ', '–ó–∞–≤—Ç—Ä–∞–∫–∏', '–£–∂–∏–Ω—ã', '–°–∞–ª–∞—Ç—ã', '–î–µ—Å–µ—Ä—Ç—ã']
        self.category_combobox = ttk.Combobox(self, values=self.categories, state="readonly")
        self.category_combobox.set('–í—Å–µ')
        self.category_combobox.pack(pady=5)

    def open_add_recipe_window(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞"""

        add_window = tk.Toplevel(self)
        add_window.title("–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç")
        add_window.geometry("400x400")

        # –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Ä–µ—Ü–µ–ø—Ç–∞
        tk.Label(add_window, text="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:").pack(pady=5)
        title_entry = tk.Entry(add_window, width=40)
        title_entry.pack(pady=5)

        tk.Label(add_window, text="–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):").pack(pady=5)
        ingredients_entry = tk.Text(add_window, width=40, height=3)
        ingredients_entry.pack(pady=5)

        tk.Label(add_window, text="–®–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:").pack(pady=5)
        steps_entry = tk.Text(add_window, width=40, height=5)
        steps_entry.pack(pady=5)

        tk.Label(add_window, text="–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–µ—Ü–µ–ø—Ç–∞:").pack(pady=5)
        category_entry = ttk.Combobox(add_window, values=self.categories, state="readonly")
        category_entry.set('–ó–∞–≤—Ç—Ä–∞–∫–∏')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        category_entry.pack(pady=5)

        tk.Label(add_window, text="–ê–≤—Ç–æ—Ä —Ä–µ—Ü–µ–ø—Ç–∞:").pack(pady=5)
        author_entry = tk.Entry(add_window, width=40)
        author_entry.pack(pady=5)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        def save_recipe():
            title = title_entry.get()
            ingredients = ingredients_entry.get("1.0", "end").strip()
            steps = steps_entry.get("1.0", "end").strip()
            author = author_entry.get().strip()
            category = category_entry.get().strip()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –ø–æ–ª—è
            if not title or not ingredients or not steps or not author or not category:
                messagebox.showwarning("–û—à–∏–±–∫–∞", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!")
                return

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
            self.recipes.append({
                "title": title,
                "ingredients": ingredients,
                "steps": steps,
                "author": author,
                "category": category
            })
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω!")
            add_window.destroy()
            self.update_recipe_list()

        save_button = ttk.Button(add_window, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=save_recipe)
        save_button.pack(pady=10)

    def update_recipe_list(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ Listbox —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        selected_category = self.category_combobox.get()
        self.recipe_listbox.delete(0, tk.END)
        for idx, recipe in enumerate(self.recipes, start=1):
            if selected_category == '–í—Å–µ' or recipe["category"] == selected_category:
                self.recipe_listbox.insert(tk.END, f"{idx}. {recipe['title']} ({recipe['category']})")

    def view_recipes(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞"""
        selected = self.recipe_listbox.curselection()
        if selected:
            index = selected[0]
            recipe = self.recipes[index]

            # –û–∫–Ω–æ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏
            view_window = tk.Toplevel(self)
            view_window.title(recipe["title"])
            view_window.geometry("400x400")

            tk.Label(view_window, text=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {recipe['title']}", font=("Arial", 12, "bold")).pack(pady=5)
            tk.Label(view_window, text="–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:", font=("Arial", 10, "bold")).pack(anchor="w", padx=10)
            tk.Label(view_window, text=recipe["ingredients"], wraplength=380, justify="left").pack(anchor="w", padx=10)

            tk.Label(view_window, text="–®–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:", font=("Arial", 10, "bold")).pack(anchor="w", padx=10)
            tk.Label(view_window, text=recipe["steps"], wraplength=380, justify="left").pack(anchor="w", padx=10)

            tk.Label(view_window, text=f"–ê–≤—Ç–æ—Ä: {recipe['author']}", font=("Arial", 10, "italic")).pack(pady=5)

        else:
            messagebox.showwarning("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app = RecipeBookApp()
    app.mainloop()
